<?php

namespace TwitteratorBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

use TwitteratorBundle\Entity\Post;

class UserRepository extends \Doctrine\ORM\EntityRepository
{

    public function insertPosts($data, $user_id)
    {
        $em = $this->getEntityManager();

        foreach($data as $post_data){

            $post = new Post();

            $post->setUserIdFk($user_id);
            $post->setContent($post_data->text);
            $post->setPostedAt($post_data->created_at);
            $post->setCreatedAt(new \DateTime('now'));

            $em->persist($post);
            $em->flush();
        }

        return true;
    }

    public function searchPosts($searchTerm, $userId){

        $em = $this->getEntityManager();

        $connection = $em->getConnection();

        // just in case, you never know...
        $statement = $connection->prepare("ALTER TABLE post ADD FULLTEXT(content)");
        $statement->execute();

        // building query
        $query = "SELECT user.screenName, post.content, post.postedAt";
        if($searchTerm != null){
            $query .= ", MATCH (post.content) AGAINST (:search IN BOOLEAN MODE) AS score";
        }
        $query .= " FROM post LEFT JOIN user ON user.id = post.userIdFk";

        if($userId != null){
            $query .= " WHERE post.userIdFk = :id";
        }

        if($searchTerm != null){
            $query .= " HAVING score > 0";
        }

        // preparing prepared statements
        $statement = $connection->prepare($query);

        if($searchTerm != null) {
            $statement->bindValue('search', $searchTerm);
        }

        if($userId != null){
            $statement->bindValue('id', $userId);
        }

        // execute
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }
}
